#to test different port
#quarkus.http.port=4200
quarkus.http.root-path=/api

#logging
#global console 
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c] (%t) %s%e%n
#global file
quarkus.log.file.enable=true
quarkus.log.file.path= logs/demoportal.log
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c] (%t) %s%e%n
#rest client
quarkus.rest-client.logging.scope=request-response
quarkus.rest-client.logging.body-limit=5000
quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=DEBUG


#abilitazioni corscd 
quarkus.http.cors=true
%dev.quarkus.http.cors.origins=/.*/

#set parametri per i client rest aifmclient aidocreader and veridas
quarkus.tls.trust-all=true
quarkus.rest-client.IdentificationFrameworkService.url=https://apistage.infocert.digital

#set parametri SelfQ Top
#user=topuser
#password=topUs3r
SelfQClient.username=topuser
SelfQClient.password=topUs3r

quarkus.rest-client.SelfQClient.url=https://top-stage.infocert.it/nomtom/top/services
#SelfQRCode
quarkus.rest-client.SelfQRCode.url=https://apistage.infocert.digital/idengine/api/v1

#set parameters for onboarding widget
quarkus.rest-client.OnboardingWidget.url=https://apistage.infocert.digital/

#Set parameters for TOP One Click Enrollment
quarkus.rest-client.TopOCE.url=https://top-cloud.infocert.it/top/
#(rest)ProcessStart           =https://top-cloud.infocert.it/top/rest10/process/{{tokenID}}/start
#(rest) OneshortStart         =https://top-cloud.infocert.it/top/rest10/oneshot/{{taskID}}/start
#(rest) Register              =https://top-cloud.infocert.it/top/rest10/oneshot/{{taskID}}/register 
#(rest) SendOTP               =https://top-cloud.infocert.it/top/rest10/oneshot/{{taskID}}/sendotp
#(rest) IssueandSign          =https://top-cloud.infocert.it/top/rest10/oneshot/{{taskID}}/issueandsign

#OAUTH2 conf with token path for direct access to infocert idp
quarkus.oidc-client.token-path=https://idpstage.infocert.digital/auth/realms/delivery/protocol/openid-connect/token
quarkus.oidc-client.client-id=demoportal01
quarkus.oidc-client.credentials.secret=a458e0f0-815b-4a72-9203-73de515b4323

#OAUTH2 conf for isac admin
quarkus.rest-client.isacadmin.url=https://idp.eu-south-1.tsaws.infocert.it/admin/api/1.0.0
smallrye.jwt.sign.key.location=rsaPrivateKey.pem
smallrye.jwt.encrypt.key.location=publicKey.pem


#Postgresql configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=demoportal_db_user
quarkus.datasource.password=demoportal_db_password
quarkus.datasource.db-version = 17.0
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/demoportal_schema
quarkus.datasource.jdbc.max-size=10

#Hibernate conf 

# drop and create the database at startup 
#quarkus.hibernate-orm.database.generation = drop-and-create
#(use `update` to only update the schema)
#quarkus.hibernate-orm.database.generation = update
%dev.quarkus.hibernate-orm.database.generation = drop-and-create
%prod.quarkus.hibernate-orm.database.generation = update
quarkus.hibernate-orm.log.format-sql=true
#debug = true
%dev.quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.sql-load-script=import.sql


# OIDC server to verify the JWT given by Angular FE auth flow
# https://idp.eu-south-1.tsaws.infocert.it/.well-known/openid-configuration
# FRONTEND:
#   clientId: demoportal
# BACKEND SVIL:
#   clientId: demoportal_backend
#   clientSecret: fMok3fCVG1r#$SOk

# OIDC server to verify the JWT given by Angular FE auth flow
# https://idpcl.infocert.it/.well-known/openid-configuration
# FRONTEND:
#   clientId: demoportal
# BACKEND SVIL:
#   clientId: demoportal_backend
#   clientSecret: E%QQH@6C%T#jXXhN

# general activation for oidc
quarkus.oidc.enabled=true
quarkus.http.auth.proactive=true
# idp collaudo
quarkus.oidc.auth-server-url=https://idpcl.infocert.it
# credentials
quarkus.oidc.client-id=demoportal_backend
quarkus.oidc.credentials.secret=E%QQH@6C%T#jXXhN
quarkus.oidc.authentication.pkce-required=true
quarkus.oidc.authentication.redirect-path=http://localhost:8080/api/login
quarkus.oidc.authentication.user-info-required=true
#ath path 
quarkus.http.auth.permission.secured.paths=/api/*                    
quarkus.http.auth.permission.secured.policy=authenticated

#quarkus.http.auth.permission.public.paths=/api/public       
#quarkus.http.auth.permission.public.policy=permit
#log oidc call
#quarkus.log.level=ALL
quarkus.log.category."io.quarkus.oidc".level=TRACE
quarkus.log.category."io.quarkus.oidc".min-level=TRACE




#quarkus.http.auth.permission.authenticated.paths=/api/*
#quarkus.http.auth.permission.authenticated.policy=authenticated

#lokalise scheduler
quarkus.rest-client.lokaliseservices.url=https://api.lokalise.com/api2/projects/6366788662792bacc120a5.07287911/keys?disable_references=1&include_comments=0&include_screenshots=0&include_translations=1
quarkus.scheduler.cron-type=unix
# every day at 00:00 o clock
lokalise.cron.expr=0 0 * * *


