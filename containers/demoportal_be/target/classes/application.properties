#logging
quarkus.rest-client.logging.scope=request-response
quarkus.rest-client.logging.body-limit=5000
quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=DEBUG


#abilitazioni cors
quarkus.http.cors=true
%dev.quarkus.http.cors.origins=/.*/

#set parametri per i client rest aifmclient aidocreader and veridas
quarkus.tls.trust-all=true
quarkus.rest-client.IdentificationFrameworkService.url=https://apistage.infocert.digital


#OAUTH2 conf with token path for direct access
quarkus.oidc-client.token-path=https://idpstage.infocert.digital/auth/realms/delivery/protocol/openid-connect/token
quarkus.oidc-client.client-id=demoportal01
quarkus.oidc-client.credentials.secret=a458e0f0-815b-4a72-9203-73de515b4323


#Postgresql configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=demoportal_postrgres_user
quarkus.datasource.password=demoportal_postrgres_password
quarkus.datasource.db-version = 17.0
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/demoportal_schema
quarkus.datasource.jdbc.max-size=10

#Hibernate conf 

# drop and create the database at startup 
#quarkus.hibernate-orm.database.generation = drop-and-create
#(use `update` to only update the schema)
#quarkus.hibernate-orm.database.generation = update
quarkus.hibernate-orm.database.generation = drop-and-create
quarkus.hibernate-orm.log.format-sql=true
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.sql-load-script=import.sql