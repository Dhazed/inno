Parameters:

  Environment:
    Description: An identifier for the environment. Use value already set in the config
    Type: String

  TeamAWSId:
    Description: AWS Team ID, from CMDB
    Type: String

  STAWSId:
    Description: Technical Service AWS ID, from CMDB
    Type: String
    
  KMSKeyId:
    Description: Key ID
    Type: String

Conditions:
  Never: !Equals [ a, b ]

Resources:

  NullResource:
    Type: Custom::Null
    Condition: Never
    
  DatabaseUsernameSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: "useradmin datasource username"
      KmsKeyId: !Ref KMSKeyId
      Name: !Join [ "_", [ !Ref TeamAWSId, !Ref STAWSId, !Ref Environment, 'secret', 'useradmin', 'quarkus', 'datasource', 'username' ] ]

  DatabasePasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: "useradmin datasource password"
      KmsKeyId: !Ref KMSKeyId
      Name: !Join [ "_", [ !Ref TeamAWSId, !Ref STAWSId, !Ref Environment, 'secret', 'useradmin', 'quarkus', 'datasource', 'password' ] ]

  KeycloakPasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: "useradmin batch encrypt password"
      KmsKeyId: !Ref KMSKeyId
      Name: !Join [ "_", [ !Ref TeamAWSId, !Ref STAWSId, !Ref Environment, 'secret', 'useradmin', 'keycloak', 'password' ] ]

  RabbitUsernameSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: "useradmin rabbit username"
      KmsKeyId: !Ref KMSKeyId
      Name: !Join [ "_", [ !Ref TeamAWSId, !Ref STAWSId, !Ref Environment, 'secret', 'useradmin', 'rabbit', 'username' ] ]

  RabbitPasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: "useradmin rabbit password"
      KmsKeyId: !Ref KMSKeyId
      Name: !Join [ "_", [ !Ref TeamAWSId, !Ref STAWSId, !Ref Environment, 'secret', 'useradmin', 'rabbit', 'password' ] ]

  OpaQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Join [ "_", [ !Ref TeamAWSId, !Ref STAWSId, !Ref Environment, 'sqs', 'midpki', 'useradmin_opa' ] ]
      VisibilityTimeout: 180
      DelaySeconds: 60

  UserAdminSQSPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref OpaQueue
      PolicyDocument:
        Version: '2012-10-17'
        Id: MyQueuePolicy
        Statement:
          - Sid: Allow-SNS-SendMessage
            Action:
              - sqs:SendMessage
              - sqs:DeleteMessage
            Effect: Allow
            Resource: !GetAtt OpaQueue.Arn
            Principal:
              AWS:
                - !Ref 'AWS::AccountId'

Outputs:

  UserAdminQueueURL:
    Description: "URL of new Amazon SQS Queue"
    Value:
      Ref: "OpaQueue"
  UserAdminQueueARN:
    Description: "ARN of new AmazonSQS Queue"
    Value:
      Fn::GetAtt:
        - "OpaQueue"
        - "Arn"
  UserAdminQueueName:
    Description: "Name of new Amazon SQS Queue"
    Value:
      Fn::GetAtt:
        - "OpaQueue"
        - "QueueName"
